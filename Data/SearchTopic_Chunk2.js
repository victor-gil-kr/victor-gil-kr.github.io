define({"148":{y:0,u:"../content/replicateplanogram.htm",l:-1,t:"ReplicatePlanogram",i:0.000919624090050648,a:"This command creates up to 10 copies of the selected planogram, with varying widths for each new planogram. You must select a planogram before using this action in the script.  Syntax Visual Basic Copy ReplicatePlanogram ( _     Planograms As Integer, _     Length0 As Double, _     Length1 As ..."},"149":{y:0,u:"../content/resetfinancialinventoryfields.htm",l:-1,t:"ResetFinancialInventoryFields",i:0.00612793968085944,a:"This command enables you to reset Product-level and Performance-level financial, inventory, Description, Value, and Flag fields based on the parameters configured in a  CreateResetFinancialInventoryParameters  command earlier in the script. See \"Reset financial and inventory data\" in the Space ..."},"150":{y:0,u:"../content/resetplanogramassortmentfields.htm",l:-1,t:"ResetPlanogramAssortmentFields",i:0.000919624090050648,a:"This command resets assortment fields to their default values for the active planogram in the project. See \"Reset assortment data\" in the Space Planning OnLine Expert for information on the fields that are reset. Syntax Visual Basic Copy ResetPlanogramAssortmentFields() C# Copy ..."},"151":{y:0,u:"../content/resetprojectassortmentfields.htm",l:-1,t:"ResetProjectAssortmentFields",i:0.000919624090050648,a:"This command resets assortment fields to their default values for all planograms in active project. See \"Reset assortment data\" in the Space Planning OnLine Expert for information on the fields that are reset. Syntax Visual Basic Copy ResetProjectAssortmentFields() C# Copy ..."},"152":{y:0,u:"../content/rotateclockwise.htm",l:-1,t:"RotateClockwise",i:0.000919624090050648,a:"This command rotates the selected objects clockwise 5 degrees. You must select objects on the planogram before using this action in the script. Note: The view from which you select and rotate the position affects the direction in which the position is rotated. If you are in Front view, the position ..."},"153":{y:0,u:"../content/rotatecounterclockwise.htm",l:-1,t:"RotateCounterClockwise",i:0.000919624090050648,a:"This command rotates the selected objects counter-clockwise 5 degrees. You must select objects on the planogram before using this action in the script. Note: The view from which you select and rotate the position affects the direction in which the position is rotated. If you are in Front view, the ..."},"154":{y:0,u:"../content/saveasplanogramtodatabase.htm",l:-1,t:"SaveAsPlanogramToDatabase",i:0.00845882669872825,a:"This command enables you to save the active planogram into the Category Knowledge Base database. You can use this command to: Save planogram changes over an existing database planogram Save planogram changes as a copy to a different location in the planogram hierarchy (the original planogram remains ..."},"155":{y:0,u:"../content/saveasplanogramversiontodatabase.htm",l:-1,t:"SaveAsPlanogramVersionToDatabase",i:0.00830304653986374,a:"This command enables you to save the active planogram into the Category Knowledge Base database as a version of another planogram stored in the database. To save the active planogram as a version of the original database planogram that was opened, you should use the  SaveAsPlanogramToDatabase  ..."},"156":{y:0,u:"../content/savefixturelibrary.htm",l:-1,t:"SaveFixtureLibrary",i:0.0017013473750391,a:"This command enables you to save the current fixture library. You can specify a new file name, path, or file mask to the fixture library being saved. Syntax Visual Basic Copy SaveFixtureLibrary ( _     FixtureFilename As String, _     Path As String, _     Filemask As String _ ) C# Copy ..."},"157":{y:0,u:"../content/saveiksdocument.htm",l:-1,t:"SaveIKSDocument",i:0.000919624090050648,a:"This command enables you to save information as a document in the ix_net_iks_doc table in the Category Knowledge Base database. The document could be a text-based file, PDF document, or an uploaded database planogram that is made available as a .psa file. After the document is saved to the table, it ..."},"158":{y:0,u:"../content/saveplanogramtodatabase.htm",l:-1,t:"SavePlanogramToDatabase",i:0.00845882669872825,a:"This command enables you to save changes for the current database planogram into the Category Knowledge Base database. This command is used only when saving changes to an existing database planogram. To save the changes to a different location in the hierarchy, modify the status or effective dates ..."},"159":{y:0,u:"../content/saveprojectfile.htm",l:-1,t:"SaveProjectFile",i:0.00114161591686091,a:"This command enables you to save the active project to a flat file. You can use the command without parameters to save the project using its current path and file name, or you can include parameters to specify a new file name, path, or file mask to the project file being saved. Note: If Space ..."},"160":{y:0,u:"../content/saveprojecttodatabase.htm",l:-1,t:"SaveProjectToDatabase",i:0.00146509329780571,a:"This command enables you to save changes for the current database project into the Category Knowledge Base database. Note:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is not needed in a Business Rule Validation ..."},"161":{y:0,u:"../content/savescriptdocument.htm",l:-1,t:"SaveScriptDocument",i:0.0017013473750391,a:"This command enables you to save information as a document in the ix_net_iks_doc table in the Category Knowledge Base database. The document could be a text-based file, PDF document, or an uploaded database planogram that is made available as a .psa file. After the document is saved to the table, it ..."},"162":{y:0,u:"../content/selectaccount.htm",l:-1,t:"SelectAccount",i:0.000919624090050648,a:"This command enables you to specify the Category Knowledge Base account to be used for the Space Automation script. All subsequent database commands are then associated with the selected account. If this command is not used in the script, the script uses the last active account selected in Space ..."},"163":{y:0,u:"../content/selectalldrawings.htm",l:-1,t:"SelectAllDrawings",i:0.000919624090050648,a:"This command selects all drawings on the current planogram. Syntax Visual Basic Copy SelectAllDrawings() C# Copy SelectAllDrawings() Example: Select all drawings on a planogram Classic style scripting  Visual Basic Copy SpacePlanning.OpenProjectFile(\"C:\\Program Files (x86)\\JDA\\Intactix\\Samples\\Space ..."},"164":{y:0,u:"../content/selectallfixtures.htm",l:-1,t:"SelectAllFixtures",i:0.000919624090050648,a:"This command selects all fixtures on the current planogram. Syntax Visual Basic Copy SelectAllFixtures() C# Copy SelectAllFixtures() Example: Select all fixtures on a planogram Classic style scripting  Visual Basic Copy SpacePlanning.OpenProjectFile(\"C:\\Program Files (x86)\\JDA\\Intactix\\Samples\\Space ..."},"165":{y:0,u:"../content/selectallpositions.htm",l:-1,t:"SelectAllPositions",i:0.000919624090050648,a:"This command selects all positions on the current planogram. Syntax Visual Basic Copy SelectAllPositions() C# Copy SelectAllPositions() Example: Select all positions on a planogram Classic style scripting  Visual Basic Copy SpacePlanning.OpenProjectFile(\"C:\\Program Files ..."},"166":{y:0,u:"../content/selectdatabase.htm",l:-1,t:"SelectDatabase",i:0.0017013473750391,a:"This command enables you to select the Category Knowledge Base database used as the source for projects and planograms processed by the script. You must insert this command before other database-related commands or functions, so that the correct database is processed by the commands and functions in ..."},"167":{y:0,u:"../content/selectdrawing.htm",l:-1,t:"SelectDrawing",i:0.00612793968085944,a:"This command enables you to select a specific drawing object on the active planogram as the primary selected object in Space Planning. You can use the  RemoveSelection   parameter to deselect or retain previously selected objects.   Syntax Visual Basic Copy SelectDrawing ( _     DrawingName As ..."},"168":{y:0,u:"../content/selectfixture.htm",l:-1,t:"SelectFixture",i:0.00227923363708161,a:"This command enables you to select a specific fixture record on the active planogram as the primary selected object in Space Planning. For example, use this command before the  SetFieldValue  command to modify a field value for the selected fixture. You can use the  RemoveSelection  parameter to ..."},"169":{y:0,u:"../content/selectfixturebylocationid.htm",l:-1,t:"SelectFixtureByLocationID",i:0.00159942886356613,a:"This command enables you to select a specific fixture record based on its location ID. The fixture becomes the primary selected object in Space Planning. For example, you can use this command before the  SetFieldValue  command to modify a field value for the selected fixture. You can use the  ..."},"170":{y:0,u:"../content/selectobjects.htm",l:-1,t:"SelectObjects",i:0.00159942886356613,a:"This command enables you to select multiple objects of the same type. You can use the  WhereCondition  parameter to specify the objects that are selected. You can use the  RemoveSelection  parameter to deselect or retain previously selected objects. After objects are selected, you can use the  ..."},"171":{y:0,u:"../content/selectplanogram_.htm",l:-1,t:"SelectPlanogram ",i:0.0052506209577742,a:" This command enables you to select a specific planogram in the active project. When selected, the planogram becomes the primary selected object in Space Planning. For example, you can use this command before using the  SetFieldValue  command to modify a field value for the selected planogram. You ..."},"172":{y:0,u:"../content/selectposition.htm",l:-1,t:"SelectPosition",i:0.00159942886356613,a:"This command enables you to select a specific position record in the active planogram. When selected, the position is the primary selected object in Space Planning. You can use the  RemoveSelection  parameter to deselect or retain previously selected objects. For example, to print the Selected ..."},"173":{y:0,u:"../content/selectpositionbylocationid.htm",l:-1,t:"SelectPositionByLocationID",i:0.00159942886356613,a:"This command enables you to select a specific position record based on its associated location ID. The position becomes the primary selected object in Space Planning. You can use the  RemoveSelection  parameter to deselect or retain previously selected objects.  For example, to print the Selected ..."},"174":{y:0,u:"../content/selectproduct_.htm",l:-1,t:"SelectProduct ",i:0.00357630534030895,a:" This command enables you to select a specific product in the active project. When selected, the product becomes the primary selected object in Space Planning. Nothing is visible on the planogram to indicate that the product is selected. For example, you can use this command before the  ..."},"175":{y:0,u:"../content/selectsegment.htm",l:-1,t:"SelectSegment",i:0.00159942886356613,a:"This command enables you to select a specific segment record on the active planogram. When selected, the segment becomes the primary selected object in Space Planning. For example, use this command before the  SetFieldValue  command to modify a field value for the selected segment. You can use the  ..."},"176":{y:0,u:"../content/selectsimilarfixtures892722.htm",l:-1,t:"SelectSimilarFixtures",i:0.000919624090050648,a:"This command enables you to select all fixtures with the same name in the active project. You must select an existing fixture before you use this command. Syntax Visual Basic Copy SelectSimilarFixtures() C# Copy SelectSimilarFixtures() Example: Select similar fixtures on a planogram Classic style ..."},"177":{y:0,u:"../content/selectsimilarpositions.htm",l:-1,t:"SelectSimilarPositions",i:0.000919624090050648,a:"This command enables you to select all positions of the same product in the active project. You must select an existing position before you use this command. Syntax Visual Basic Copy SelectSimilarPositions() C# Copy SelectSimilarPositions() Example: Select similar positions on a planogram Classic ..."},"178":{y:0,u:"../content/setactiveplanogram_.htm",l:-1,t:"SetActivePlanogram ",i:0.000919624090050648,a:" This command, when used without the optional PlanogramIndex parameter, sets the planogram that is active in Space Planning to be the active planogram in the script. When the PlanogramIndex parameter is used, it specifies the planogram that is made the active planogram. This enables you to create ..."},"179":{y:0,u:"../content/setdrawingfield.htm",l:-1,t:"SetDrawingField",i:0.00131048573254488,a:"This command enables you to edit a field value for a drawing object. To edit a drawing on a specific planogram, include a  SelectPlanogram  command before this command to activate the planogram. Otherwise, the drawing object is edited only if it exists on the active planogram in the active project. ..."},"180":{y:0,u:"../content/setfieldvalue.htm",l:-1,t:"SetFieldValue",i:0.0116999078569496,a:"This command enables you to edit the field value for the current record of the specified object. You must select an object to be modified before using this command. To select an object, you can use a Select command for the object type or insert this command in an object-specific loop. Syntax Visual ..."},"181":{y:0,u:"../content/setfixturefield.htm",l:-1,t:"SetFixtureField",i:0.0017013473750391,a:"This command enables you to edit a field value for a fixture. To edit a fixture on a specific planogram, you must include a  SelectPlanogram  command before this command to activate the planogram. Otherwise, the fixture is edited only if it exists on the active planogram in the active project. This ..."},"182":{y:0,u:"../content/setiksjobstatus.htm",l:-1,t:"SetIKSJobStatus",i:0.000919624090050648,a:"This command sets the status for a CKS upload script. Note: This command refers to the legacy Intactix Knowledge Server application name, which was replaced with Category Knowledge Server in version 9.0.0.0. This command has been retained to support previous scripts that already use it. New scripts ..."},"183":{y:0,u:"../content/setmultiplefieldvalues_space.htm",l:-1,t:"SetMultipleFieldValues",i:0.00266390334965491,a:"This command enables you to update multiple field values for the active planogram. Note: To update values for multiple objects, the primary identifier for the objects (product ID or UPC, fixture or planogram Name, or peg ID) must be unique. To avoid FieldValueMustBeUnique exceptions, you should ..."},"184":{y:0,u:"../content/setperformancefield.htm",l:-1,t:"SetPerformanceField",i:0.000919624090050648,a:"This command enables you to edit a field value for a performance record. The Performance object stores planogram-specific data, so you must first select a planogram using the  SelectPlanogram  command before you use this command. Syntax Visual Basic Copy SetPerformanceField ( _     ProductKey As ..."},"185":{y:0,u:"../content/setplanogramfield_.htm",l:-1,t:"SetPlanogramField ",i:0.0017013473750391,a:" This command enables you to edit a field value for a single, specified planogram. To edit the field value for more than one planogram, use the  SetFieldValue  command in a  ForPlanograms  loop.  Note: If you are editing the field value for a single planogram, you should include the  SelectPlanogram ..."},"186":{y:0,u:"../content/setpositionfield.htm",l:-1,t:"SetPositionField",i:0.00560996379998137,a:"This command enables you to edit a field value for a specific position. This command edits the field value for a single position. To edit the field value for more than one position, you can use the  SetFieldValue  command within a  ForPositions  loop.  Syntax Visual Basic Copy SetPositionField ( _ ..."},"187":{y:0,u:"../content/setprimaryproductlibrarytable.htm",l:-1,t:"SetPrimaryProductLibraryTable",i:0.000919624090050648,a:"This command enables you to specify a different primary table in the product library data source for use in your product library file. This can be useful if you store your product information in different tables in the same Access database or in different dBase files in the same directory. You must ..."},"188":{y:0,u:"../content/setproductfield.htm",l:-1,t:"SetProductField",i:0.0017013473750391,a:"This command enables you to edit a field value for a single product.  To edit the field value for more than one product, use the  SetFieldValue  command in a  ForProducts  loop.  Syntax Visual Basic Copy SetProductField ( _     ProductKey As String, _     Field As SpaceProductFields, _     NewValue ..."},"189":{y:0,u:"../content/setprojectfield.htm",l:-1,t:"SetProjectField",i:0.000919624090050648,a:"This command enables you to edit a field value for a specific Project Syntax Visual Basic Copy SetProjectField( _     ProjectName As String, _     Field As JDA.Intactix.Automation.SpaceProjectFields, _     ByVal NewValue As Object _ ) C# Copy SetProjectField(string ProjectName,SpaceProjectFields ..."},"190":{y:0,u:"../content/setscriptjobstatus.htm",l:-1,t:"SetScriptJobStatus",i:0.00209220901753333,a:"This command sets the status for a CKS upload script. Note: This command is supported only when Space Automation Professional is  configured  to use a direct database connection. Syntax Visual Basic Copy SetScriptJobStatus(Status As CKSJobStatus) C# Copy SetScriptJobStatus(CKSJobStatus JobStatus) ..."},"191":{y:0,u:"../content/setsegmentfield_.htm",l:-1,t:"SetSegmentField ",i:0.000919624090050648,a:" This command enables you to edit a field value for a segment on the active planogram. To edit a segment on a specific planogram, include a  SelectPlanogram  command before this command to activate the planogram. Otherwise, the segment is edited only if it exists on the active planogram in the ..."},"192":{y:0,u:"../content/setselectedfixtureattributes.htm",l:-1,t:"SetSelectedFixtureAttributes",i:0.000919624090050648,a:"This command sets the specified fixture attribute for all selected fixtures. Syntax Visual Basic Copy SetSelectedFixtureAttributes ( _     Field As SpaceFixtureFields, _     NewValue As Object _ ) C# Copy SetSelectedFixtureAttributes(SpaceFixtureFields Field, object NewValue) Parameters Example: Set ..."},"193":{y:0,u:"../content/setselectedpositionattributes.htm",l:-1,t:"SetSelectedPositionAttributes",i:0.000919624090050648,a:"This command sets the specified position attribute for all selected positions. Syntax Visual Basic Copy SetSelectedPositionAttributes ( _     Field As SpacePositionFields, _     NewValue As Object _ ) C# Copy SetSelectedPositionAttributes(SpacePositionFields Field, object NewValue) Parameters ..."},"194":{y:0,u:"../content/settableplanogram.htm",l:-1,t:"SetTablePlanogram",i:0.00131048573254488,a:"This command sets the data view option for a table. Syntax Visual Basic Copy SetTablePlanogram ( _     ViewType As SpaceViewType _ ) C# Copy SetTablePlanogram(SpaceViewType ViewType) Parameters Example: Export a Space Planning table Classic style scripting  Visual Basic Copy ..."},"195":{y:0,u:"../content/sortplanograms.htm",l:-1,t:"SortPlanograms",i:0.000919624090050648,a:"This command enables you to change order of planograms within the Space Planning project. Syntax Visual Basic Copy SortPlanograms ( _     SortFormula1 As SpacePlanogramFields, _     SortDescending1 As Boolean, _     SortFormula2 As SpacePlanogramFields, _     SortDescending2 As Boolean, _ ..."},"196":{y:0,u:"../content/splitfixtures.htm",l:-1,t:"SplitFixtures",i:0.000919624090050648,a:"This command enables you to split a fixture that spans multiple segments into individual adjacent fixtures that correspond to the segment widths. You cannot split fixtures that span only one segment. If Space Planning is set to require unique fixture naming when you split a fixture, the fixtures are ..."},"197":{y:0,u:"../content/splitsegments.htm",l:-1,t:"SplitSegments",i:0.000919624090050648,a:"This command enables you to split an existing segment into further segments or to split the whole planogram into new segments, removing the old segments. Note: This command deletes existing segment information, but does not adjust fixture locations. Syntax Visual Basic Copy SplitSegments( _ ..."},"198":{y:0,u:"../content/spreadhorizontally.htm",l:-1,t:"SpreadHorizontally",i:0.000919624090050648,a:"This command spreads selected objects horizontally along the fixture or planogram. You must select objects on the planogram before using this action in the script. Note: The ability to spread positions on a fixture depends on merchandising controls set for the fixture on which the position is placed ..."},"199":{y:0,u:"../content/spreadvertically.htm",l:-1,t:"SpreadVertically",i:0.000919624090050648,a:"This command spreads selected objects vertically along the fixture or planogram. You must select objects on the planogram before using this action in the script. Note: The ability to spread positions on a fixture depends on merchandising controls set for the fixture on which the position is placed ..."},"200":{y:0,u:"../content/swapposition.htm",l:-1,t:"SwapPosition",i:0.000919624090050648,a:"This command enables you to replace an individual position of a specified product with a position of another product. Syntax Visual Basic Copy SwapPosition ( _     ProductKey As String, _     SwapProductKey As String, _     CurrentFixture As String, _     CurrentPositionX As Double, _ ..."},"201":{y:0,u:"../content/swappositions.htm",l:-1,t:"SwapPositions",i:0.000919624090050648,a:"This command enables you to replace all positions of a specified product with positions of another product. Syntax Visual Basic Copy SwapPositions ( _     ProductKey As String, _     SwapProductKey As String _ ) C# Copy SwapPositions(string ProductKey, string SwapProductKey) Parameters Example: Swap ..."},"202":{y:0,u:"../content/ungrouppositions.htm",l:-1,t:"UngroupPositions",i:0.000919624090050648,a:"This command splits multiple facings of a single selected position into multiple positions of the same product. You must select positions on the planogram before using this command.  Syntax Visual Basic Copy UngroupPositions() C# Copy UngroupPositions() Example: Group and ungroup positions on a ..."},"203":{y:0,u:"../content/updatefixturelibraryfromproject.htm",l:-1,t:"UpdateFixtureLibraryFromProject",i:0.000919624090050648,a:"This command updates fixtures or planograms in the fixture library with the same name as objects in the project and adds new planograms from the project to the fixture library. You must open the fixture library manually or use the  OpenFixtureLibrary  command before you use this command. Syntax ..."},"204":{y:0,u:"../content/updateproductlibraryfromproject.htm",l:-1,t:"UpdateProductLibraryFromProject",i:0.00131048573254488,a:"This command enables you to update a product library with information from a project. You must open the product library manually or use the  OpenProductLibrary  command before you use this command. The primary key of the product library being updated must match the primary key for the project. ..."},"205":{y:0,u:"../content/updateproductsfromdatabaselibrary.htm",l:-1,t:"UpdateProductsFromDatabaseLibrary",i:0.000919624090050648,a:"This command updates products from a Category Knowledge Base database. Note: You must include the SelectDatabase command before this command to select the database to be accessed by your script. Syntax Visual Basic Copy UpdateProductsFromDatabaseLibrary( _     UpdateType As UpdateTypeDB,  _ ..."},"206":{y:0,u:"../content/updateprojectfromfixturelibrary.htm",l:-1,t:"UpdateProjectFromFixtureLibrary",i:0.000919624090050648,a:"This command updates fixtures and planograms in the project with information from the fixture library for fixtures or planograms with the same name. You must open the fixture library manually or use the  OpenFixtureLibrary  command before you use this command. Syntax Visual Basic Copy ..."},"207":{y:0,u:"../content/updateprojectfromproductlibrary.htm",l:-1,t:"UpdateProjectFromProductLibrary",i:0.00131048573254488,a:"This command enables you to update a project from a product library. You must open the product library manually or use the  OpenProductLibrary  command before you use this command. The primary key for the project being updated must match the primary key of the product library. Otherwise, an error ..."},"208":{y:0,u:"../content/viewmessagelist.htm",l:-1,t:"ViewMessageList",i:0.00612793968085944,a:"This command enables you to access the current contents of the Space Planning message list. The message list identifies objects that do not meet a condition in a validation script. The command returns a multi-dimensional array that contains the message list details.  The  AddToMessageList  command ..."},"209":{y:0,u:"../content/floor_planning_commands.htm",l:-1,t:"Floor Planning commands",i:0.000919624090050648,a:"Floor Planning commands  In this section"},"210":{y:0,u:"../content/adddrawing_floor.htm",l:-1,t:"AddDrawing",i:0.000919624090050648,a:"This command enables you to add a new drawing to the active floorplan. This command sets only basic information for the drawing. To edit additional drawing fields, use the  SetDrawingField  command after the drawing is added. Syntax Visual Basic Copy AddDrawing ( _     DrawingName As String, _ ..."},"211":{y:0,u:"../content/addentrytoprintlist372865.htm",l:-1,t:"AddEntryToPrintList",i:0.00873209747626383,a:"This command enables you to add a new project and layout combination to a batch print list (.pfi) file. The print list can be an existing one, or it can be created by a script using the  CreatePrintList  command. Additions to the batch print list are automatically saved when the script is run. The ..."},"212":{y:0,u:"../content/addfiletopackage372866.htm",l:-1,t:"AddFileToPackage",i:0.00612793968085944,a:"Use this command to add files, such as non-Floor Planning files that typically accompany the project, to an existing package created by the  CreatePackage  command.  Syntax Visual Basic Copy AddFileToPackage ( _     PackageName As String, _     ParamArray UserFiles As String() _ ) C# Copy ..."},"213":{y:0,u:"../content/addfixture364982.htm",l:-1,t:"AddFixture",i:0.000919624090050648,a:"This command enables you to add a new fixture to the active floorplan. This command sets only basic information for the fixture. To edit additional fixture fields, use the  SetFixtureField  command after the fixture is added. Syntax Visual Basic Copy AddFixture ( _     FixtureName As String, _ ..."},"214":{y:0,u:"../content/addfixturefromfixturelibrary.htm",l:-1,t:"AddFixtureFromFixtureLibrary",i:0.000919624090050648,a:"This command enables you to add a fixture from the open fixture library to the active floorplan. You must open the fixture library manually or use the  OpenFixtureLibrary  command before you use this command. Syntax Visual Basic Copy AddFixtureFromFixtureLibrary( _     FixtureName As String ) C# ..."},"215":{y:0,u:"../content/addfloorplan.htm",l:-1,t:"AddFloorplan",i:0.000919624090050648,a:"This command enables you to add a new floorplan to the active project. This command sets only basic information for the floorplan. To edit additional floorplan fields, use the  SetFloorplanField  command after the floorplan is added. Syntax Visual Basic Copy AddFloorplan ( _     FloorPlanName As ..."},"216":{y:0,u:"../content/addobstruction.htm",l:-1,t:"AddObstruction",i:0.000919624090050648,a:"This command enables you to add a new obstruction fixture to the active floorplan. This command sets only basic information for the obstruction. To edit additional fixture fields, use the  SetFixtureField  command after the obstruction is added. Syntax Visual Basic Copy AddObstruction ( _ ..."},"217":{y:0,u:"../content/addplanogram364984.htm",l:-1,t:"AddPlanogram",i:0.000919624090050648,a:"This command enables you to add a new planogram to the active project. This command sets only basic information for the planogram. To edit additional planogram fields, use the  SetPlanogramField  command after the planogram is added. Syntax Visual Basic Copy AddPlanogram ( _     PlanogramName As ..."},"218":{y:0,u:"../content/addplanogramfromplanogramlibrary.htm",l:-1,t:"AddPlanogramFromPlanogramLibrary",i:0.00266390334965491,a:"This command enables you to add a single planogram from a planogram library to the active project. After the planogram has been added, you can use the  InsertPlanogramSection  command to place the planogram on a fixture in a floorplan. You must use the  OpenPlanogramLibrary  command to open a ..."},"219":{y:0,u:"../content/addtomessagelist372868.htm",l:-1,t:"AddToMessageList",i:0.00612793968085944,a:"This command enables you to add a message to the Floor Planning message list to identify an object that does not meet a condition of a validation script. You can perform the following tasks to view the contents of the message list: Use the  ViewMessageList  command.  Attempt to save a floorplan to ..."},"220":{y:0,u:"../content/appendfloorplan.htm",l:-1,t:"AppendFloorplan",i:0.000919624090050648,a:"This command enables you to copy the floorplans in a selected project file and add them as new tabs in the active project. This command performs the same action as selecting File \u003e Open and selecting the Add Floorplans to Active Project option when opening files. Care should be taken when using this ..."},"221":{y:0,u:"../content/checkprojectreadonlystatus918088.htm",l:-1,t:"CheckProjectReadOnlyStatus",i:0.000919624090050648,a:"This command determines whether the current active project is read-only. It returns True if the project is read-only. Syntax Visual Basic Copy FloorPlanning.CheckProjectReadOnlyStatus() C# Copy CheckProjectReadOnlyStatus() Example: Check a Floor Planning project\u0027s read-only status Classic style ..."},});