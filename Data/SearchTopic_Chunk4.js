define({"296":{y:0,u:"../content/redrawoff372916.htm",l:-1,t:"RedrawOff",i:0.00266390334965491,a:"This command disables the screen refresh in Floor Planning and limits the number of times Floor Planning redraws the project\u0027s active view. Using this command may speed performance of scripts during processing. When projects are modified by a script, Floor Planning must spend time redrawing the ..."},"297":{y:0,u:"../content/redrawon372917.htm",l:-1,t:"RedrawOn",i:0.00205189642698027,a:"This command turns on the screen refresh in Floor Planning, and forces Floor Planning to redraw its active project view. Use this command if a  RedrawOff  command was previously used in a script to limit Floor Planning\u0027s redrawing. Note: When Redraw is turned off, then turned back on (by using this ..."},"298":{y:0,u:"../content/reloadtextures.htm",l:-1,t:"ReloadTextures",i:0.000919624090050648,a:"This command reloads the texture images in the current 3D floorplan view. This process is useful when file locations change, or when existing images are modified or new ones are added to the selected file locations. Syntax Visual Basic Copy ReloadTextures() C# Copy bool ReloadTextures() Example: ..."},"299":{y:0,u:"../content/reloadtexturesandmodels.htm",l:-1,t:"ReloadTexturesAndModels",i:0.000919624090050648,a:"This command reloads the textures and models in the current 3D floorplan view. This process is useful when file locations change, or when existing models are modified or new ones are added to the selected file locations. Syntax Visual Basic Copy ReloadTexturesandModels()  C# Copy bool ..."},"300":{y:0,u:"../content/renumberlocationids421898.htm",l:-1,t:"RenumberLocationIDs",i:0.000919624090050648,a:"This command renumbers Location IDs for sections and fixtures, if the IDs are set to be numbered manually. Syntax Visual Basic Copy RenumberLocationIDs() C# Copy RenumberLocationIDs() Example: Renumber Location IDs in Floor Planning Classic style scripting  Visual Basic Copy ..."},"301":{y:0,u:"../content/rotateclockwise421899.htm",l:-1,t:"RotateClockwise",i:0.000919624090050648,a:"This command rotates the selected objects clockwise 5 degrees. You must select objects on the floorplan before using this action in the script. Syntax Visual Basic Copy RotateClockwise() C# Copy RotateClockwise() Example: Rotate fixtures on a floorplan Classic style scripting  Visual Basic Copy ..."},"302":{y:0,u:"../content/rotatecounterclockwise421900.htm",l:-1,t:"RotateCounterClockwise",i:0.000919624090050648,a:"This command rotates the selected objects counter-clockwise 5 degrees. You must select objects on the floorplan before using this action in the script. Syntax Visual Basic Copy RotateCounterClockwise() C# Copy RotateCounterClockwise() Example: Rotate fixtures on a floorplan Classic style scripting  ..."},"303":{y:0,u:"../content/saveasfloorplantodatabase.htm",l:-1,t:"SaveAsFloorplanToDatabase",i:0.0029696674346236,a:"This command enables you to save the active floorplan into a Category Knowledge Base database. You can use this command to: Save floorplan changes over an existing database floorplan Save floorplan changes as a copy to a different location in the floorplan hierarchy (the original floorplan remains ..."},"304":{y:0,u:"../content/saveasfloorplanversiontodatabase.htm",l:-1,t:"SaveAsFloorplanVersionToDatabase",i:0.00279668979501637,a:"This command enables you to save the active floorplan into the Category Knowledge Base database as a version of another floorplan stored in the database. To save the active floorplan as a version of the original database floorplan that was opened, you should use the  SaveAsFloorplanToDatabase  ..."},"305":{y:0,u:"../content/savefixturelibrary372923.htm",l:-1,t:"SaveFixtureLibrary",i:0.0017013473750391,a:"This command enables you to save the current fixture library. You can specify a new file name, path, or file mask to the fixture library being saved. Syntax Visual Basic Copy SaveFixtureLibrary ( _     FixtureFileName As String, _     Path As String, _     FileMask As String _ ) C# Copy ..."},"306":{y:0,u:"../content/savefloorplantodatabase.htm",l:-1,t:"SaveFloorplanToDatabase",i:0.0029696674346236,a:"This command enables you to save changes for the active database floorplan into a Category Knowledge Base database. This command is used only when saving changes to an existing database floorplan. To save the changes to a different location in the hierarchy, to modify the status or effective dates ..."},"307":{y:0,u:"../content/saveprojectfile364978.htm",l:-1,t:"SaveProjectFile",i:0.00114161591686091,a:"This command enables you to save the active project file to a flat file. You can use the command without parameters to save the project using its current path and file name, or you can include parameters to specify a new file name, path, or file mask for the project file being saved. Syntax Visual ..."},"308":{y:0,u:"../content/saveprojecttodatabase372925.htm",l:-1,t:"SaveProjectToDatabase",i:0.00146509329780571,a:"This command enables you to save changes for the active database project into a Category Knowledge Base database. Notes:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is supported only when Space Automation ..."},"309":{y:0,u:"../content/selectaccount372926.htm",l:-1,t:"SelectAccount",i:0.000919624090050648,a:"This command enables you to specify the Category Knowledge Base account to be used for the Space Automation script. All subsequent database commands are then associated with the selected account. If this command is not used in the script, the script uses the last active account selected in Floor ..."},"310":{y:0,u:"../content/selectalldrawings421901.htm",l:-1,t:"SelectAllDrawings",i:0.000919624090050648,a:"This command selects all text boxes and drawing objects on the current floorplan. Syntax Visual Basic Copy SelectAllDrawings() C# Copy SelectAllDrawings() Example: Select all drawings on a floorplan Classic style scripting Visual Basic  Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files ..."},"311":{y:0,u:"../content/selectallfixtures421902.htm",l:-1,t:"SelectAllFixtures",i:0.000919624090050648,a:"This command selects all fixtures on the current floorplan. Syntax Visual Basic Copy SelectAllFixtures() C# Copy SelectAllFixtures() Example: Select all fixtures on a floorplan Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files (x86)\\JDA\\Intactix\\Samples\\Floor ..."},"312":{y:0,u:"../content/selectallsections.htm",l:-1,t:"SelectAllSections",i:0.000919624090050648,a:"This command selects all sections on the current floorplan. Syntax Visual Basic Copy SelectAllSections() C# Copy SelectAllSections() Example: Select all sections on a floorplan Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files (x86)\\JDA\\Intactix\\Samples\\Floor ..."},"313":{y:0,u:"../content/selectdatabase372927.htm",l:-1,t:"SelectDatabase",i:0.000919624090050648,a:"This command enables you to select the Category Knowledge Base database used as the source for projects and floorplans processed by the script. You must insert this command before other database-related commands or functions, so that the correct database is processed by the commands and functions in ..."},"314":{y:0,u:"../content/selectdepartment.htm",l:-1,t:"SelectDepartment",i:0.000919624090050648,a:"This command enables you to select a specific department record as the active object in Floor Planning. For example, use this command before using the  SetFieldValue  command to modify the selected department. You can use the RemoveSelection parameter to deselect or retain previously selected ..."},"315":{y:0,u:"../content/selectdrawing364987.htm",l:-1,t:"SelectDrawing",i:0.000919624090050648,a:"This command enables you to select a specific drawing object as the primary selected object in Floor Planning. You can use the RemoveSelection parameter to deselect or retain previously selected objects.  Syntax Visual Basic Copy SelectDrawing ( _     DrawingName As String, _     RemoveSelection As ..."},"316":{y:0,u:"../content/selectfixture364988.htm",l:-1,t:"SelectFixture",i:0.000919624090050648,a:"This command enables you to select a specific fixture record as the active object in Floor Planning. For example, to print the Selected Fixture Page table, showing only the information for a selected fixture, first select a fixture, then use the  PrintTableChart  command to print the table. Syntax ..."},"317":{y:0,u:"../content/selectfixturebylocationid364989.htm",l:-1,t:"SelectFixtureByLocationID",i:0.000919624090050648,a:"This command enables you to select a specific fixture record, based on its Location ID, as the primary selected object in Floor Planning. For example, use this command before the  SetFieldValue  command to modify a field value for the selected fixture. You can use the RemoveSelection parameter to ..."},"318":{y:0,u:"../content/selectfloorplan.htm",l:-1,t:"SelectFloorplan",i:0.0024684584261372,a:"This command enables you to select a floorplan as the active object in Floor Planning. For example, use this command before the  SetFieldValue  command to modify a field value for the selected floorplan. Syntax Visual Basic Copy SelectFloorplan ( _     FloorplanName As String, _     RemoveSelection ..."},"319":{y:0,u:"../content/selectobjects365007.htm",l:-1,t:"SelectObjects",i:0.000919624090050648,a:"This command enables you to select multiple objects of the same type. Use the WhereCondition parameter to specify the objects that are selected. Use the RemoveSelection parameter to deselect or retain previously selected objects. After objects are selected, use the  ForSelectedObjects  loop to ..."},"320":{y:0,u:"../content/selectplanogram_365006.htm",l:-1,t:"SelectPlanogram ",i:0.000919624090050648,a:" This command enables you to select a specific planogram as the active object in Floor Planning. For example, you can use this command before using the  SetFieldValue  command to modify a field value for the selected planogram. Nothing is visible on the floorplan to indicate that the planogram is ..."},"321":{y:0,u:"../content/selectsection.htm",l:-1,t:"SelectSection",i:0.000919624090050648,a:"This command enables you to select a specific section as the active object. For example, to print the Selected Planogram Page table, showing only the information for a selected planogram, first select a section, then use the  PrintTableChart  command to print the table. You can use the ..."},"322":{y:0,u:"../content/selectsectionbylocationid.htm",l:-1,t:"SelectSectionByLocationID",i:0.000919624090050648,a:"This command enables you to select a specific section record, based on its associated location ID, as the primary selected object in Floor Planning. For example, to print the Selected Planogram Page table, showing only the information for a selected planogram, first select a section, then use the  ..."},"323":{y:0,u:"../content/selectsimilarfixtures.htm",l:-1,t:"SelectSimilarFixtures",i:0.000919624090050648,a:"This command selects all fixtures with the same name on the current floorplan. Syntax Visual Basic Copy SelectSimilarFixtures() C# Copy SelectSimilarFixtures() Example: Select similar fixtures on a floorplan Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files ..."},"324":{y:0,u:"../content/selectsimilarsections.htm",l:-1,t:"SelectSimilarSections",i:0.000919624090050648,a:"This command selects all sections of the same planogram on the current floorplan. Syntax Visual Basic Copy SelectSimilarSections() C# Copy SelectSimilarSections() Example: Select similar sections on the floorplan Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program ..."},"325":{y:0,u:"../content/setactivefloorplan.htm",l:-1,t:"SetActiveFloorplan",i:0.000919624090050648,a:"This command, when used without the optional FloorplanIndex parameter, sets the floorplan that is active in Floor Planning to be the active floorplan in Space Automation. When the Index parameter is used, the floorplan specified in the parameter is made the active floorplan in Space Automation. This ..."},"326":{y:0,u:"../content/setdepartmentfield.htm",l:-1,t:"SetDepartmentField",i:0.000919624090050648,a:"This command enables you to edit a field value for a single department on the active floorplan.  To edit a department on a specific floorplan, you must include a  SelectFloorplan  command before this command to activate the floorplan. Otherwise, the department is edited only if it exists on the ..."},"327":{y:0,u:"../content/setdrawingfield365008.htm",l:-1,t:"SetDrawingField",i:0.00131048573254488,a:"This command enables you to set a field value for a single drawing object. To edit a drawing object on a specific floorplan, you must include the  SelectFloorplan  command before this command to activate a floorplan. Otherwise, the drawing object is edited only if it exists on the active floorplan ..."},"328":{y:0,u:"../content/setfieldvalue365003.htm",l:-1,t:"SetFieldValue",i:0.0091985292972319,a:"This command enables you to edit the field value for the current record of the specified object. You must select an object to be modified before using this command. To select an object, you can use a Select command for the object type or insert this command in an object-specific loop. Syntax Visual ..."},"329":{y:0,u:"../content/setfixturefield365010.htm",l:-1,t:"SetFixtureField",i:0.00248307066002756,a:"This command enables you to edit the field value for a fixture. To edit a fixture on a specific floorplan, you must include a  SelectFloorplan  command before this command to activate the floorplan. Otherwise, the fixture is edited only if it exists on the active floorplan in the active project. ..."},"330":{y:0,u:"../content/setfloorplanfield.htm",l:-1,t:"SetFloorplanField",i:0.0017013473750391,a:"This command enables you to edit a field value for a single floorplan. To edit the field value for more than one floorplan, use the  SetFieldValue  command in a  ForFloorplans  loop.  Note: If you are editing the field value for a single floorplan, you should include the  SelectFloorplan  command ..."},"331":{y:0,u:"../content/setmultiplefieldvalues_floor.htm",l:-1,t:"SetMultipleFieldValues",i:0.00266390334965491,a:"This command enables you to update multiple field values for the active planogram. Syntax Visual Basic Copy SetMultipleFieldValues ( _     fieldObject as FloorBulkSetFieldObject, _     fieldData as object,  _     whereCondition as string _ ) C# Copy SpacePlanning. SetMultipleFieldValues ..."},"332":{y:0,u:"../content/setperformancefield421906.htm",l:-1,t:"SetPerformanceField",i:0.000919624090050648,a:"This command enables you to edit a field value for a single planogram on a floorplan. To edit the field value for more than one performance record, use the  SetFieldValue  command in a  ForPerformances  loop.  Syntax Visual Basic Copy SetPerformanceField ( _     PlanogramKey As String, _ ..."},"333":{y:0,u:"../content/setplanogramfield.htm",l:-1,t:"SetPlanogramField",i:0.0017013473750391,a:"This command enables you to edit a field value for a single planogram. To edit the field value for more than one planogram, use the  SetFieldValue  command in a  ForPlanograms  loop.  Syntax Visual Basic Copy SetPlanogramField ( _     PlanogramKey As String, _     FieldName As FloorPlanogramFields, ..."},"334":{y:0,u:"../content/setprojectfield433310.htm",l:-1,t:"SetProjectField",i:0.000919624090050648,a:"This command enables you to edit a field value for a specific Project Syntax Visual Basic Copy SetProjectField ( _     ProjectName As String, _     FieldName As JDA.Intactix.Automation.FloorProjectFields, _     NewValue As Object _ ) C# Copy SetProjectField(string ProjectName, FloorProjectFields ..."},"335":{y:0,u:"../content/setsectionfield.htm",l:-1,t:"SetSectionField",i:0.000919624090050648,a:"This command enables you to edit a field value for a single section. To edit the field value for more than one section, use the  SetFieldValue  command in a  ForSections  loop.  Syntax Visual Basic Copy SetSectionField ( _     PlanogramKey As String, _     Field As FloorSectionFields, _     NewValue ..."},"336":{y:0,u:"../content/setsectionsegments.htm",l:-1,t:"SetSectionSegments",i:0.000919624090050648,a:"This command applies Segment Start and Segment End values to sections that represent segmented planograms. See \"Set section segments\" in the Floor Planning OnLine Expert. Syntax Visual Basic Copy SetSectionSegments() C# Copy SetSectionSegments() Example: Set section segments Classic style scripting  ..."},"337":{y:0,u:"../content/settablefloorplan.htm",l:-1,t:"SetTableFloorplan",i:0.00131048573254488,a:"This command sets the data view option for a table. Syntax Visual Basic Copy SetTableFloorplan ( _     ViewType As FloorViewType _ ) C# Copy SetTableFloorplan(FloorViewType ViewType) Parameters Example: Set the active floorplan in a table view Classic style scripting  Visual Basic Copy ..."},"338":{y:0,u:"../content/sortfloorplans.htm",l:-1,t:"SortFloorplans",i:0.000919624090050648,a:"This command enables you to specify the sequence of floorplans within a multi-floorplan project.  Syntax Visual Basic Copy SortFloorplans ( _     SortFormula1 As FloorplanFields, _     SortDescending1 As Boolean = False, _     SortFormula2 As FloorplanFields, _     SortDescending2 As Boolean, _ ..."},"339":{y:0,u:"../content/split.htm",l:-1,t:"Split",i:0.000919624090050648,a:"This command splits the merchandising space on combined fixtures. Syntax Visual Basic Copy Split() C# Copy Split() Example: Join and split fixture merchandising space Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files (x86)\\JDA\\Intactix\\Samples\\Floor Planning ..."},"340":{y:0,u:"../content/splitplanogramsegments.htm",l:-1,t:"SplitPlanogramSegments",i:0.000919624090050648,a:"This command splits a section of the planogram on the floorplan into separate smaller sections based on the segment information in the planogram. When this option is used, separate sections are created for each segment in the planogram. The Segment Start and Segment End fields for each section ..."},"341":{y:0,u:"../content/splitsections.htm",l:-1,t:"SplitSections",i:0.000919624090050648,a:"If a floorplan contains sections that overlap the fixtures on where they are placed, you can split those section areas into separate segments. The result depends on whether the section\u0027s Segment Start and Segment End values are based on the associated planogram segments: If the Segment Start and ..."},"342":{y:0,u:"../content/swapsection.htm",l:-1,t:"SwapSection",i:0.000919624090050648,a:"This command enables you to replace an individual section of a specified planogram with a section of another planogram. Syntax Visual Basic Copy SwapSection ( _     PlanogramKey As String, _     SwapPlanogramKey As String, _     CurrentFixture As String, _     CurrentSectionX As Double, _ ..."},"343":{y:0,u:"../content/swapsections.htm",l:-1,t:"SwapSections",i:0.000919624090050648,a:"This command enables you to replace all sections of a specified planogram with sections of another planogram. Syntax Visual Basic Copy SwapSections ( _     PlanogramKey As String, _     SwapPlanogramKey As String _ ) C# Copy SwapSections(string PlanogramKey, string SwapPlanogramKey) Parameters ..."},"344":{y:0,u:"../content/updatefixturelibraryfromproject372934.htm",l:-1,t:"UpdateFixtureLibraryFromProject",i:0.000919624090050648,a:"This command updates fixtures in the library with the same name as fixtures in the project. The fixture library must be opened manually or using the  OpenFixtureLibrary  command before the updating the fixture library from the project. Syntax Visual Basic Copy UpdateFixtureLibraryfromProject() C# ..."},"345":{y:0,u:"../content/updateplanogramlibraryfromproject.htm",l:-1,t:"UpdatePlanogramLibraryFromProject",i:0.00131048573254488,a:"This command enables you to update a planogram library with information from a project. The planogram library must be opened either manually or with the  OpenPlanogramLibrary  command before updating the planogram library from the project. The primary key for the planogram library being updated must ..."},"346":{y:0,u:"../content/updateprojectfromfixturelibrary372936.htm",l:-1,t:"UpdateProjectFromFixtureLibrary",i:0.000919624090050648,a:"This command updates fixtures in the project with library information for fixtures with the same name. The fixture library must be opened using the  OpenFixtureLibrary  command before updating the project from the fixture library. Syntax Visual Basic Copy UpdateProjectFromFixtureLibrary() C# Copy ..."},"347":{y:0,u:"../content/updateprojectfromplanogramlibrary.htm",l:-1,t:"UpdateProjectFromPlanogramLibrary",i:0.00131048573254488,a:"This command enables you to update a project from a planogram library. The planogram library must be opened manually or by using the  OpenPlanogramLibrary  command before updating the project from the planogram library. The primary key for the project being updated must match the primary key for the ..."},"348":{y:0,u:"../content/viewmessagelist_floor.htm",l:-1,t:"ViewMessageList",i:0.00612793968085944,a:"This command enables you to access the current contents of the Floor Planning message list. The message list identifies objects that do not meet a condition in a validation script. The command returns a multi-dimensional array that contains the message list details. The  AddToMessageList  command is ..."},"349":{y:0,u:"../content/database_commands.htm",l:-1,t:"Database commands",i:0.000919624090050648,a:"Database commands  In this section"},"350":{y:0,u:"../content/createdatabasereportprefilter.htm",l:-1,t:"CreateDatabaseReportPreFilter",i:0.000919624090050648,a:"This command enables you to create a pre-filter for use with the  ExportDatabaseReportData  command. The pre-filter is dynamic, so it is not saved to the database. Pre-filters enable you to limit the data displayed that is exported in the report. If a pre-filter is not applied to the database before ..."},"351":{y:0,u:"../content/executequery.htm",l:-1,t:"ExecuteQuery",i:0.00889428984388254,a:"This command allows you to populate a DataTable object with the results of a saved  database query . You then can perform tasks using the query information. Note: In scripts that will be called from a Space Planning or Floor Planning menu, you must include the SelectDatabase command before this ..."},"352":{y:0,u:"../content/exportdatabasereportdata_.htm",l:-1,t:"ExportDatabaseReportData ",i:0.00131048573254488,a:" This command enables you to select an analysis report from the current Category Knowledge Base database and export its data to an external file, which enables individuals without CKB to view the report data. You can export report data in the following formats: Rich Text Format (RTF)  Fixed Column ..."},"353":{y:0,u:"../content/getapplicationaccountkey.htm",l:-1,t:"GetApplicationAccountKey",i:0.000919624090050648,a:"This command returns the DBKey of the account that is active in the selected application. You can specify keyword or numeric values for each application: Space Automation: APP_SAUTO or 1 Space Planning: APP_SPACE or 2 Floor Planning: APP_FLOOR or 3 Category Knowledge Base: APP_IKB or 4 Category ..."},"354":{y:0,u:"../content/gethierarchynodedescriptionsfromdatabase_.htm",l:-1,t:"GetHierarchyNodeDescriptionsFromDatabase ",i:0.000919624090050648,a:" This command enables you to specify an object type and hierarchy node keys (as a delimited string), and then returns a delimited string of matching node descriptions. Quotation marks are used as string delimiters and the list is comma separated. If no hierarchy nodes match the specified node keys, ..."},"355":{y:0,u:"../content/gethierarchynodekeysfromdatabase.htm",l:-1,t:"GetHierarchyNodeKeysFromDatabase",i:0.000919624090050648,a:"This command enables you to specify an object type and hierarchy node descriptions (as a delimited string), then returns a list of matching node keys. Quotation marks are used as string delimiters and the list is comma-separated. If no hierarchy nodes match the specified descriptions, nothing is ..."},"356":{y:0,u:"../content/getselectedhierarchynodedescriptionsfromdatabase_.htm",l:-1,t:"GetSelectedHierarchyNodeDescriptionsFromDatabase",i:0.000919624090050648,a:"This command enables you to select a hierarchy node for a specific object type to retrieve the hierarchy descriptions for the selected node. Quotation marks are used as string delimiters and the list is comma separated. If the user does not select a hierarchy node, nothing is returned. Notes:  You ..."},"357":{y:0,u:"../content/getselectedhierarchynodekeysfromdatabase_.htm",l:-1,t:"GetSelectedHierarchyNodeKeysFromDatabase ",i:0.000919624090050648,a:" This command enables you to select a hierarchy node for a specific object type to retrieve a list of hierarchy key values for the selected node. Quotation marks are used as string delimiters and the list is comma separated. If the user does not select a hierarchy node, nothing is returned. Notes:  ..."},"358":{y:0,u:"../content/getselecteditemkeysfromdatabase.htm",l:-1,t:"GetSelectedItemKeysFromDatabase",i:0.000919624090050648,a:"This command enables you to select a hierarchy node and items within that node for a specific object type. The command then returns a comma-delimited list of item key values for the selected node. If you do not select a hierarchy node, nothing is returned. Notes:  You must include the SelectDatabase ..."},"359":{y:0,u:"../content/getstatusfromdatabase_.htm",l:-1,t:"GetStatusFromDatabase ",i:0.000919624090050648,a:" This command returns the current status description from the ix_sys_status table for the specified status DBKey.  Notes:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is not recommended in Category Knowledge ..."},"360":{y:0,u:"../content/getstatuskeyfromdatabase_.htm",l:-1,t:"GetStatusKeyFromDatabase ",i:0.000919624090050648,a:" This command returns the current status DBKey from the ix_sys_status table for the specified status description.   Notes:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is not recommended in Category Knowledge ..."},"361":{y:0,u:"../content/printdatabasereportchart.htm",l:-1,t:"PrintDatabaseReportChart",i:0.000919624090050648,a:"This command enables you to print an analysis report or chart. When you select the report or chart, you should also select a pre-filter to limit the data included in the report or chart. Applying a pre-filter enables you to open reports and charts more quickly. If you do not select a pre-filter, all ..."},"362":{y:0,u:"../content/enumerated_fields.htm",l:-1,t:"Enumerated fields",i:0.000919624090050648,a:"Enumerated fields  In this section"},"363":{y:0,u:"../content/accountkeytypes.htm",l:-1,t:"AccountKeyTypes",i:0.000919624090050648,a:"AccountKeyTypes"},"364":{y:0,u:"../content/addupdateoption.htm",l:-1,t:"AddUpdateOption",i:0.000919624090050648,a:"AddUpdateOption"},"365":{y:0,u:"../content/allocationdirections.htm",l:-1,t:"AllocationDirections",i:0.00104991130421539,a:"AllocationDirections"},"366":{y:0,u:"../content/allocationsplitdefaults.htm",l:-1,t:"AllocationSplitDefaults",i:0.00131048573254488,a:"AllocationSplitDefaults"},"367":{y:0,u:"../content/allocationsplittypes.htm",l:-1,t:"AllocationSplitTypes",i:0.00120191305407426,a:"AllocationSplitTypes"},"368":{y:0,u:"../content/cancombine.htm",l:-1,t:"CanCombine",i:0.00101733950067421,a:"CanCombine"},"369":{y:0,u:"../content/cksjobstatus.htm",l:-1,t:"CKSJobStatus",i:0.000919624090050648,a:"Note: This enumerated field refers to the legacy Intactix Knowledge Server application name, which was replaced with Category Knowledge Server in version 9.0.0.0. This enumerated field has been retained to support previous scripts that already use it. New scripts should use the  SetScriptJobStatus  ..."},"370":{y:0,u:"../content/floordrawings.htm",l:-1,t:"DrawingType (Floor Planning)",i:0.00209220901753333,a:"DrawingType (Floor Planning)"},"371":{y:0,u:"../content/spacedrawings.htm",l:-1,t:"DrawingType (Space Planning)",i:0.00131048573254488,a:"DrawingType (Space Planning)"},"372":{y:0,u:"../content/exportmethod422430.htm",l:-1,t:"ExportMethod",i:0.000919624090050648,a:"ExportMethod"},"373":{y:0,u:"../content/fileopen.htm",l:-1,t:"FileOpen",i:0.000919624090050648,a:"FileOpen"},"374":{y:0,u:"../content/fillpatterns.htm",l:-1,t:"FillPatterns",i:0.00309107765946302,a:"FillPatterns"},"375":{y:0,u:"../content/filtercombination.htm",l:-1,t:"FilterCombination",i:0.000919624090050648,a:"FilterCombination"},"376":{y:0,u:"../content/filterstate.htm",l:-1,t:"FilterState",i:0.000919624090050648,a:"FilterState"},"377":{y:0,u:"../content/flooractivationmodetypes.htm",l:-1,t:"FloorActivationModeTypes",i:0.000979756650434375,a:"FloorActivationModeTypes"},"378":{y:0,u:"../content/floorapplicationfields.htm",l:-1,t:"FloorApplicationFields",i:0.000919624090050648,a:"FloorApplicationFields"},"379":{y:0,u:"../content/floorbulksetfieldobject.htm",l:-1,t:"FloorBulkSetFieldObject",i:0.00205189642698027,a:"FloorBulkSetFieldObject"},"380":{y:0,u:"../content/floorcommands.htm",l:-1,t:"FloorCommands",i:0.000919624090050648,a:"FloorCommands"},"381":{y:0,u:"../content/floordatabaseobjecttype.htm",l:-1,t:"FloorDatabaseObjectType",i:0.000919624090050648,a:"FloorDatabaseObjectType"},"382":{y:0,u:"../content/floordepartmentfields.htm",l:-1,t:"FloorDepartmentFields",i:0.000919624090050648,a:"FloorDepartmentFields"},"383":{y:0,u:"../content/floordrawingfields.htm",l:-1,t:"FloorDrawingFields",i:0.000919624090050648,a:"FloorDrawingFields"},});