define({"222":{y:0,u:"../content/clearmessagelist372869.htm",l:-1,t:"ClearMessageList",i:0.000919624090050648,a:"This command clears the contents of the Floor Planning Business Rule Validation message list. This step is useful, because it ensures that only messages associated with the most recent validation are displayed in the list. Syntax Visual Basic Copy ClearMessageList C# Copy ClearMessageList() Example: ..."},"223":{y:0,u:"../content/clearundo372870.htm",l:-1,t:"ClearUndo",i:0.000919624090050648,a:"This command clears the actions stored in the Undo list for Floor Planning, which prevents a user from reversing the actions performed by the script in Floor Planning. Syntax Visual Basic Copy ClearUndo() C# Copy ClearUndo() Example: Modify a floorplan Classic style scripting  Visual Basic Copy ..."},"224":{y:0,u:"../content/closefixturelibrary364990.htm",l:-1,t:"CloseFixtureLibrary",i:0.000919624090050648,a:"This command enables you to close a fixture library. If you modified the fixture library, use the  SaveFixtureLibrary  command to save the changes before using this command. Syntax Visual Basic Copy CloseFixtureLibrary ( _     FixtureLibraryName As String _ ) C# Copy CloseFixtureLibrary([string ..."},"225":{y:0,u:"../content/closeplanogramlibrary.htm",l:-1,t:"ClosePlanogramLibrary",i:0.000919624090050648,a:"This command enables you to close a planogram library. The library does not have to be saved before closing, because changes made to the library data are saved automatically in the library\u0027s data source. Syntax Visual Basic Copy ClosePlanogramLibrary ( _     PlanogramLibraryName As String _ ) C# ..."},"226":{y:0,u:"../content/closeprojectfile364971.htm",l:-1,t:"CloseProjectFile",i:0.00182804954205655,a:"This command enables you to close the active project. The project being closed is not saved automatically, and no warning is displayed if the file has been modified. If the script modified the project being closed and you do not want to lose the changes, use the  SaveProjectFile ,  ..."},"227":{y:0,u:"../content/closetablechartview372871.htm",l:-1,t:"CloseTableChartView",i:0.000919624090050648,a:"This command closes a selected table or chart file. If no parameter is listed, the command closes the last table or chart view to be opened by the script. You do not have to save the table or chart view before closing the file, because you cannot modify the layout of the table or chart in a script. ..."},"228":{y:0,u:"../content/copyimage.htm",l:-1,t:"CopyImage",i:0.000919624090050648,a:"This command copies a floorplan image to the Clipboard.  Syntax Visual Basic Copy CopyImage ( _     LayoutFileName As String, _     LayoutSource As Integer, _     Height As Integer, _     Width As Integer, _     LayoutPage As Integer, _     Format As Integer, _     Color As Integer, _ ..."},"229":{y:0,u:"../content/copytoclipboard421886.htm",l:-1,t:"CopyToClipboard",i:0.000919624090050648,a:"This command copies the selected objects to the Clipboard. This action is equivalent to selecting  Copy  in the Edit group of the Home or Build ribbon in Floor Planning. You must select objects on the floorplan before using this command. Syntax Visual Basic Copy CopyToClipboard() C# Copy ..."},"230":{y:0,u:"../content/createnewproject364972.htm",l:-1,t:"CreateNewProject",i:0.000919624090050648,a:"This command creates a new project with the default settings. You can use the ProjectName setting to specify the name of the project, and use the  SetFieldValue  command after the project is created to set the necessary project information. Syntax Visual Basic Copy CreateNewProject(ProjectName as ..."},"231":{y:0,u:"../content/createobjectarray_floor.htm",l:-1,t:"CreateObjectArray",i:0.00205189642698027,a:"This command creates an array for use with the  SetMultipleFieldValues  command. Syntax Visual Basic Copy CreateObjectArray(fieldObject as FloorBulkSetFieldObject, fieldValues as object[,]) C# Copy FloorPlanning.CreateObjectArray(FloorBulkSetFieldObject fieldObject, object[,] fieldValues) Parameters ..."},"232":{y:0,u:"../content/createpackage372875.htm",l:-1,t:"CreatePackage",i:0.00612793968085944,a:"This command enables you to combine files related to the active project (including the project, open tables or charts, images and models, labels, printing layouts, and open libraries and their databases) into a package that is saved as a zip file.  After you create the package, you can use the  ..."},"233":{y:0,u:"../content/createprintlist372876.htm",l:-1,t:"CreatePrintList",i:0.00873209747626383,a:"This command enables you to create a new batch print (.pfi) file. The batch print list is automatically saved when the script is run. New entries can then be added to the print list using the  AddEntrytoPrintList  command. You must first run the line containing this command to save the print list as ..."},"234":{y:0,u:"../content/cuttoclipboard421887.htm",l:-1,t:"CutToClipboard",i:0.000919624090050648,a:"This command cuts the selected objects to the Clipboard. This action is equivalent to selecting  Cut  in the Edit group of the Home or Build ribbon in Floor Planning. You must select objects on the floorplan before using this command. Syntax Visual Basic Copy CutToClipboard() C# Copy ..."},"235":{y:0,u:"../content/deletedepartment.htm",l:-1,t:"DeleteDepartment",i:0.00205189642698027,a:"This command enables you to delete a department from the active floorplan. To delete multiple departments, use the  DeleteDepartmentsWithCondition  command. Syntax Visual Basic Copy DeleteDepartment ( _     DepartmentName As String _ ) C# Copy DeleteDepartment(string DepartmentName) Parameters ..."},"236":{y:0,u:"../content/deletedepartmentswithcondition.htm",l:-1,t:"DeleteDepartmentsWithCondition",i:0.00266390334965491,a:"This command enables you to remove all departments that meet a designated condition from the active floorplan. This command enables you to delete departments without embedding the  DeleteDepartment  command in a  ForDepartments  loop. Syntax Visual Basic Copy DeleteDepartmentsWithCondition ( _ ..."},"237":{y:0,u:"../content/deletedrawing364992.htm",l:-1,t:"DeleteDrawing",i:0.00205189642698027,a:"This command enables you to delete a drawing object, such as a text box or manual dimension. To delete multiple drawing objects, use the  DeleteDrawingsWithCondition  command. Syntax Visual Basic Copy DeleteDrawing ( _     DrawingName As String _ ) C# Copy DeleteDrawing(string DrawingName) ..."},"238":{y:0,u:"../content/deletedrawingswithcondition364993.htm",l:-1,t:"DeleteDrawingsWithCondition",i:0.00266390334965491,a:"This command enables you to remove all drawings that meet a designated condition from the active floorplan. This command enables you to delete drawing objects without embedding the  DeleteDrawing  command in a  ForDrawings  loop. Syntax Visual Basic Copy DeleteDrawingsWithCondition ( _ ..."},"239":{y:0,u:"../content/deletefixture364996.htm",l:-1,t:"DeleteFixture",i:0.00205189642698027,a:"This command enables you to remove a fixture from the active floorplan. If sections exist on the fixture being deleted, the sections are also removed from the floorplan without warning. To delete multiple fixtures, use the  DeleteFixturesWithCondition  command. Syntax Visual Basic Copy DeleteFixture ..."},"240":{y:0,u:"../content/deletefixtureswithcondition364997.htm",l:-1,t:"DeleteFixturesWithCondition",i:0.00266390334965491,a:"This command enables you to remove all fixtures that meet a designated condition from the active floorplan. This command enables you to delete fixtures without embedding the  DeleteFixture  command in a  ForFixtures  loop. If sections exist on the fixtures being deleted, the sections are also ..."},"241":{y:0,u:"../content/deletefloorplan.htm",l:-1,t:"DeleteFloorplan",i:0.00205189642698027,a:"This command enables you to delete a floorplan, and all objects on the floorplan, from the active project. To delete multiple floorplans, use the  DeleteFloorplansWithCondition  command. If other fixtures, sections, departments, or drawings exist on the floorplan being deleted, those objects are ..."},"242":{y:0,u:"../content/deletefloorplanswithcondition.htm",l:-1,t:"DeleteFloorplansWithCondition",i:0.00266390334965491,a:"This command enables you to remove all floorplans that meet a designated condition from the active project. This command enables you to delete floorplans without embedding the  DeleteFloorplan  command in a  ForFloorplans  loop. If other fixtures, sections, departments, or drawings exist on the ..."},"243":{y:0,u:"../content/deleteplanogram.htm",l:-1,t:"DeletePlanogram",i:0.00205189642698027,a:"This command enables you to delete a specific planogram from the active project. If sections exist for the planogram being deleted, those sections are also removed from the project without warning. To delete multiple planograms, use the  DeletePlanogramsWithCondition  command. Syntax Visual Basic ..."},"244":{y:0,u:"../content/deleteplanograms.htm",l:-1,t:"DeletePlanograms",i:0.000919624090050648,a:"This command enables you to remove all sections from the currently selected floorplan, planograms (and their associated sections) from the active project, or unused planograms from the active project. Syntax Visual Basic Copy DeletePlanograms ( _     DeleteOption As PlanogramDeleteOptions _ ) C# ..."},"245":{y:0,u:"../content/deleteplanogramswithcondition.htm",l:-1,t:"DeletePlanogramsWithCondition",i:0.00266390334965491,a:"This command enables you to remove all planograms that meet a designated condition (and their associated sections) from the active project. This command enables you to delete planograms without embedding the  DeletePlanogram  command in a  ForPlanograms  loop. Syntax Visual Basic Copy ..."},"246":{y:0,u:"../content/deletesection.htm",l:-1,t:"DeleteSection",i:0.00205189642698027,a:"This command enables you to delete a specific section from the active floorplan. To delete multiple sections, use the  DeleteSectionsWithCondition  command. Syntax Visual Basic Copy DeleteSection ( _     PlanogramKey As String, _     FixtureName As String, _     CurrentSectionX As Double, _ ..."},"247":{y:0,u:"../content/deletesectionswithcondition.htm",l:-1,t:"DeleteSectionsWithCondition",i:0.00266390334965491,a:"This command enables you to remove all sections that meet a designated condition from the active floorplan in the active project, without deleting the associated planograms from the project. This command enables you to delete sections without embedding the  DeleteSection  command within a  ..."},"248":{y:0,u:"../content/deselectallobjects433297.htm",l:-1,t:"DeselectAllObjects",i:0.000919624090050648,a:"This command enables you to deselect multiple objects of the same type. Syntax Visual Basic Copy DeselectAllObjects() C# Copy DeselectAllObjects() Example: Deselect all objects on a floorplan Classic style scripting  Visual Basic Copy FloorPlanning.OpenProjectFile(\"C:\\Program Files ..."},"249":{y:0,u:"../content/deselectobjects364985.htm",l:-1,t:"DeselectObjects",i:0.000919624090050648,a:"This command enables you to deselect multiple objects of the same type. You can use the WhereCondition parameter to specify the objects that are deselected. Syntax Visual Basic Copy DeSelectObjects ( _     Object As FloorUIObjects, _     Where As String, _     Redraw As Boolean _ ) C# Copy ..."},"250":{y:0,u:"../content/explodesection.htm",l:-1,t:"ExplodeSection",i:0.000919624090050648,a:"This command enables you to convert a single section into several sections of specified sizes. You use the Segments parameter to specify the widths of segments, in minor units, of the original source planogram in Space Planning, separated by commas. The command then copies the section and alters the ..."},"251":{y:0,u:"../content/exportexceltabledata892729.htm",l:-1,t:"ExportExcelTableData",i:0.000919624090050648,a:"This command enables you to export table data to a Microsoft Excel file. Syntax Visual Basic Copy ExportExcelTableData(_     ExportFileName As String, _     XLOption As XLOption, _     TemplateFilename As String, _     SubTotals As Boolean, _     Format As Boolean_ ) C# Copy ..."},"252":{y:0,u:"../content/exportimage372879.htm",l:-1,t:"ExportImage",i:0.00205189642698027,a:"This command enables you to export the floorplan image to a file, which allows someone without Floor Planning to view the floorplan image. You can save the active floorplan picture based on its current view settings, or specify a layout for the exported picture. If you have Floor Planning and want ..."},"253":{y:0,u:"../content/exporttabledata372881.htm",l:-1,t:"ExportTableData",i:0.000919624090050648,a:"This command enables you to export table data to an external file, which allows individuals without Floor Planning to view the table data. You can export table data in the following formats: Rich Text Format (RTF) Fixed Column Widths (text file) Comma Separated (text file) Tab Delimited (text file) ..."},"254":{y:0,u:"../content/filterplanogramlibraryupdatefrom.htm",l:-1,t:"FilterPlanogramLibraryUpdateFrom",i:0.000919624090050648,a:"This command enables you to filter a selected planogram library before using the  UpdateProjectfromPlanogramLibrary  command to update the project with information from the library. You must use this command before using the  OpenPlanogramLibrary  command for the filter to work properly. Otherwise, ..."},"255":{y:0,u:"../content/filterplanogramlibraryupdateinto.htm",l:-1,t:"FilterPlanogramLibraryUpdateInto",i:0.000919624090050648,a:"This command enables you to filter a selected planogram library before using the  UpdatePlanogramLibraryfromProject  command to update the library with data from the project. You must use this command before using the  OpenPlanogramLibrary  command for the filter to work properly. Otherwise, an ..."},"256":{y:0,u:"../content/flipfixtures.htm",l:-1,t:"FlipFixtures",i:0.000919624090050648,a:"This command rotates the selected fixtures 180 degrees based on their existing angle. Flipped fixtures remain in their original location. Syntax Visual Basic Copy FlipFixtures() C# Copy FlipFixtures() Example: Flip fixtures on a floorplan Classic style scripting  Visual Basic Copy ..."},"257":{y:0,u:"../content/forallopenprojects372884.htm",l:-1,t:"ForAllOpenProjects",i:0.000919624090050648,a:"This command enables you to process all projects that are open in Floor Planning (including file-based and database projects). You do not need to create a file list to use this command. The projects remain open after being processed. Note: You should not use the  CloseProjectFile  command within ..."},"258":{y:0,u:"../content/fordatabasefloorplans.htm",l:-1,t:"ForDatabaseFloorplans",i:0.00114161591686091,a:"This loop enables you to process a defined group of floorplans from the Category Knowledge Base database. You define the floorplans in the group by listing their DBKey values, separated by commas, in the parentheses within the command line.  Floorplans from the database are loaded automatically as ..."},"259":{y:0,u:"../content/fordatabaseprojects1008529.htm",l:-1,t:"ForDatabaseProjects",i:0.00114161591686091,a:"This loop enables you to process a defined group of projects from the Category Knowledge Base database. You define the projects in the group by listing their DBKey values, separated by commas, in the parentheses within the command line.  Projects from the database are loaded automatically at the ..."},"260":{y:0,u:"../content/fordepartments.htm",l:-1,t:"ForDepartments",i:0.00231247085530976,a:"This loop performs commands for all departments on the active floorplan. For conditional changes to department records, you can use the WhereCondition parameter to specify the departments processed by the commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Department In ..."},"261":{y:0,u:"../content/fordrawings372888.htm",l:-1,t:"ForDrawings",i:0.00233039122695782,a:"This loop performs commands for all drawings within the active floorplan. You can use the WhereCondition parameter to specify the drawings processed by the commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Drawing In FloorPlanning.ForDrawings(WhereCondition as String) Next C# Copy ..."},"262":{y:0,u:"../content/forfixtures372889.htm",l:-1,t:"ForFixtures",i:0.00257958316314914,a:"This loop performs commands for all fixtures on the active floorplan. You can use the WhereCondition parameter to specify the fixtures processed by the commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Fixture In FloorPlanning.ForFixtures(WhereCondition as String) Next C# Copy ..."},"263":{y:0,u:"../content/forfixturesections.htm",l:-1,t:"ForFixtureSections",i:0.000919624090050648,a:"This loop performs commands for all sections on the selected fixture. You must use a script command to select a fixture on the active floorplan before using this command. You can use the WhereCondition parameter to specify the sections processed by commands in the loop.  Note: If you include ..."},"264":{y:0,u:"../content/forfloorplans.htm",l:-1,t:"ForFloorplans",i:0.00373101797723157,a:"This loop performs commands for all floorplans in the active project. You can use the WhereCondition parameter to specify the floorplans processed by the commands in the loop.  Syntax Visual Basic Copy For Each Var as Floor.Floorplan In FloorPlanning.ForFloorplans(WhereCondition as String) Next C# ..."},"265":{y:0,u:"../content/forfloorplansvalidation.htm",l:-1,t:"ForFloorplansValidation",i:0.00128322782405971,a:"When creating a validation script, this command causes all floorplans selected during the save or load process to be validated. If the command is not used, the script validates only the active floorplan.  If you have multi-floorplan projects and want to validate all floorplans before they are saved ..."},"266":{y:0,u:"../content/forperformances372893.htm",l:-1,t:"ForPerformances",i:0.00131048573254488,a:"This loop performs commands for all performance records associated with the active floorplan. You can use the WhereCondition parameter to specify the performance records processed by commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Performance In ..."},"267":{y:0,u:"../content/forplanograms372894.htm",l:-1,t:"ForPlanograms",i:0.00277501398439625,a:"This loop performs commands for all planograms in the active project. You can use the WhereCondition parameter to specify the planograms processed by commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Planogram In FloorPlanning.ForPlanograms(WhereCondition as String) Next C# Copy ..."},"268":{y:0,u:"../content/forprojects1080452.htm",l:-1,t:"ForProjects",i:0.000919624090050648,a:"This loop performs actions for the specified projects. You can specify a list of file names or you can identify a directory and file extension to process all files of the selected type in the selected directory and subdirectories. Syntax Visual Basic Copy For Each Var1 As Floor.Project In ..."},"269":{y:0,u:"../content/forsections.htm",l:-1,t:"ForSections",i:0.0024427580694745,a:"This loop performs commands for all sections on the active floorplan. You can use the WhereCondition parameter to specify the sections processed by commands in the loop. Syntax Visual Basic Copy For Each Var as Floor.Section In FloorPlanning.ForSections(WhereCondition as String) Next C# Copy foreach ..."},"270":{y:0,u:"../content/forselectedobjects372897.htm",l:-1,t:"ForSelectedObjects",i:0.0017013473750391,a:"This loop performs commands for selected objects that are the same type as the primary selected object, which is typically the last object that was selected. Objects that are not the same type as the primary selected object are ignored by the loop. Syntax Visual Basic Copy For Each Var as Object In ..."},"271":{y:0,u:"../content/getdatabaseconnectiondetails1032560.htm",l:-1,t:"GetDatabaseConnectionDetails",i:0.000919624090050648,a:"This command enables you to access the connection string to create your own database connection to execute SQL jobs. The command returns the object of type DatabaseInfo, which contains properties such as the LoginName, Password, ServerType, ConnectionString, DataSource, and Database. Note: This ..."},"272":{y:0,u:"../content/hideapplication372899.htm",l:-1,t:"HideApplication",i:0.000919624090050648,a:"This command hides Floor Planning while the script is running. Using this command may speed performance of scripts during processing. This command must be added at the before opening projects or libraries for the command to function properly. After the script is run, Floor Planning returns to view. ..."},"273":{y:0,u:"../content/highlightproject372900.htm",l:-1,t:"HighlightProject",i:0.000919624090050648,a:"This command enables you to use existing highlight files to highlight projects. This command is the same as selecting  Open  in the Highlighting group of the Analysis ribbon in Floor Planning and loading a highlight file. This command can also be used to turn highlighting off. Syntax Visual Basic ..."},"274":{y:0,u:"../content/importplanograms.htm",l:-1,t:"ImportPlanograms",i:0.000919624090050648,a:"This command enables you to import planogram data from a text file according to settings stored in a previously created Import Planogram Settings (.PFM) file, which enables you to add new planograms and update existing planograms with data in a text file without needing to create a separate ..."},"275":{y:0,u:"../content/insertplanogramsection.htm",l:-1,t:"InsertPlanogramSection",i:0.00205189642698027,a:"This command enables you to insert a new section onto the active floorplan. A planogram record for the section being inserted must exist before this command can be used. This planogram could be an existing planogram already in the project or one added to the project by the  ..."},"276":{y:0,u:"../content/join.htm",l:-1,t:"Join",i:0.000919624090050648,a:"This command enables you to combine the merchandising space of individual adjacent fixtures into one merchandising space to allow sections to span across the fixtures. To combine merchandising space on fixtures, the fixtures must: Be regular fixtures Be aligned end-to-end Be rotated at the same ..."},"277":{y:0,u:"../content/joinplanogramsegments.htm",l:-1,t:"JoinPlanogramSegments",i:0.0017013473750391,a:"If a planogram is split into multiple sections based on Segment Start and Segment End values, this command joins the sections back together to form a larger section. Syntax Visual Basic Copy JoinPlanogramSegments C# Copy JoinPlanogramSegments() Example: Split and join planogram segments Classic ..."},"278":{y:0,u:"../content/movedown421891.htm",l:-1,t:"MoveDown",i:0.000919624090050648,a:"This command moves the selected object down one increment. You must select objects on the floorplan before using this action in the script.  Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is placed.  ..."},"279":{y:0,u:"../content/moveexistingsection.htm",l:-1,t:"MoveExistingSection",i:0.000919624090050648,a:"This command enables you to move an existing section on the active floorplan to a new location. Syntax Visual Basic Copy MoveExistingSection ( _     PlanogramKey As String, _     CurrentFixtureName As String, _     Direction As PlanDirections, _     TargetFixture As String, _     AdjacentSectionKey ..."},"280":{y:0,u:"../content/movein421892.htm",l:-1,t:"MoveIn",i:0.000919624090050648,a:"This command moves the selected object in one increment. You must select objects on the floorplan before using this action in the script. Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is placed.  ..."},"281":{y:0,u:"../content/moveleft421893.htm",l:-1,t:"MoveLeft",i:0.000919624090050648,a:"This command moves the selected object to the left one increment. You must select objects on the floorplan before using this action in the script. Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is ..."},"282":{y:0,u:"../content/moveout421894.htm",l:-1,t:"MoveOut",i:0.000919624090050648,a:"This command moves the selected object out one increment. You must select objects on the floorplan before using this action in the script. Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is placed.  ..."},"283":{y:0,u:"../content/moveright421895.htm",l:-1,t:"MoveRight",i:0.000919624090050648,a:"This command moves the selected object to the right one increment. You must select objects on the floorplan before using this action in the script. Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is ..."},"284":{y:0,u:"../content/moveup421896.htm",l:-1,t:"MoveUp",i:0.000919624090050648,a:"This command moves the selected object up one increment. You must select objects on the floorplan before using this action in the script. Note: The ability to move sections (in any direction) may depend on merchandising controls set for the section or the fixture on which the section is placed.  ..."},"285":{y:0,u:"../content/openfixturelibrary.htm",l:-1,t:"OpenFixtureLibrary",i:0.00248307066002756,a:"This command opens a fixture library. Syntax Visual Basic Copy OpenFixtureLibrary ( _     FixtureLibraryName As String _ ) C# Copy Floor.Project OpenFixtureLibrary(string FixtureLibraryName) Parameters Example: Update a project from a fixture library Classic style scripting  Visual Basic Copy ..."},"286":{y:0,u:"../content/openfloorplanfromdatabase.htm",l:-1,t:"OpenFloorplanFromDatabase",i:0.00189543380360598,a:"This command enables you to open and process a single floorplan from a Category Knowledge Base database.  Notes:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is supported only when Space Automation Professional is ..."},"287":{y:0,u:"../content/openfromdatabase1139586.htm",l:-1,t:"OpenFromDatabase",i:0.000919624090050648,a:"This command enables you to merge or append floorplans from the Category Knowledge Base database to the current project or active floorplan. Note: To open a single floorplan for processing, you should use the  OpenFloorplanFromDatabase  command. Note: This command is supported only when Space ..."},"288":{y:0,u:"../content/openplanogramlibrary.htm",l:-1,t:"OpenPlanogramLibrary",i:0.00506157811178914,a:"This command opens a planogram library. Syntax Visual Basic Copy OpenPlanogramLibrary ( _     PlanogramLibraryName As String _ )  C# Copy Floor.PlanogramLibrary OpenPlanogramLibrary(string PlanogramLibraryName) Parameters Example: Add a planogram from a planogram library Classic style scripting  ..."},"289":{y:0,u:"../content/openprojectfile364977.htm",l:-1,t:"OpenProjectFile",i:0.000919624090050648,a:"This command enables you to open and process a single project file.  Syntax Visual Basic Copy OpenProjectFile ( _     FileName As String _ )  C# Copy Floor.Project OpenProjectFile(string FileName) Parameters Example: Update a project from a fixture library Classic style scripting  Visual Basic Copy ..."},"290":{y:0,u:"../content/openprojectfromdatabase372908.htm",l:-1,t:"OpenProjectFromDatabase",i:0.00124310147099545,a:"This command enables you to open and process a single project from a Category Knowledge Base database. Notes:  You must include the SelectDatabase command before this command to select the database to be accessed by your script. This command is supported only when Space Automation Professional is  ..."},"291":{y:0,u:"../content/opentablechartview372909.htm",l:-1,t:"OpenTableChartView",i:0.000919624090050648,a:"This command enables you to open a table or chart file. The table or chart that is opened displays information for the active project. To display table data for multiple projects, you should use this command in a  ForProjects  loop to open table views for each project. If opening a table for ..."},"292":{y:0,u:"../content/pastefromclipboard421897.htm",l:-1,t:"PasteFromClipboard",i:0.000919624090050648,a:"This command pastes objects from the Clipboard onto the floorplan. This action is equivalent to selecting the Paste  option in the Home or Build ribbon in Floor Planning. You must select a target destination on the floorplan before using this action in the script. See \"Copy a section\" and \"Copy a ..."},"293":{y:0,u:"../content/printtablechart372911.htm",l:-1,t:"PrintTableChart",i:0.00326479394501601,a:"This command enables you to print a table or chart. The command prints the specified table for the active project. If no project is open, an error results. The table is printed using the Table.pfy layout file. This layout file is stored in the directory in which Space Automation is installed. You ..."},"294":{y:0,u:"../content/printusinglayout372912.htm",l:-1,t:"PrintUsingLayout",i:0.000919624090050648,a:"This command enables you to designate the layout the script uses when printing the active project. Syntax Visual Basic Copy PrintUsingLayout ( _     LayoutFile As String, _     Selection As FloorSelection, _     Printer As String, _     FileName As String _ ) C# Copy PrintUsingLayout(string ..."},"295":{y:0,u:"../content/printusingprintlist372913.htm",l:-1,t:"PrintUsingPrintList",i:0.000919624090050648,a:"This command enables you to have print the projects included in a print list. The print list can either be an existing batch print (.pfi) file, or one created using the  CreatePrintList  and  AddEntrytoPrintList  commands before this command in the script. Note: If your projects and floorplans are ..."},});